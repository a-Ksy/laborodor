{"version":3,"sources":["Components/Navbar/Navbar.js","Components/ListPanel/List/Task/Task.js","Components/ListPanel/List/List.js","Components/ListPanel/ListPanel.js","Components/ListPanel/TaskForm/TaskForm.js","Components/TimerPanel/TimerControls/TimerControls.js","Components/TimerPanel/Timer/Timer.js","Components/TimerPanel/TimerPanel.js","Components/Main.js","App.js","serviceWorker.js","index.js","fonts/ProximaNova-Regular.otf","fonts/Proxima Nova Alt Bold.otf"],"names":["navbar","bg","fixed","Brand","React","Component","Task","props","state","className","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","viewProps","showButtonsOnHover","editOnViewClick","type","value","this","name","onSave","val","change_taskName","taskKey","ExpansionPanelDetails","style","marginLeft","marginRight","color","fontSize","width","finishedRounds","rounds","notes","change_taskNotes","marginTop","onClick","delete_task","List","isEditable","column","undefined","paddingLeft","paddingRight","change_listName","delete_list","prevProps","lists","forceUpdate","droppableId","columnId","key","provided","snapshot","droppableProps","ref","innerRef","items","map","item","index","draggableId","draggableProps","dragHandleProps","userSelect","taskName","placeholder","ListPanel","onDragEnd","result","columns","destination","source","console","log","sourceColumn","destColumn","sourceItems","destItems","splice","removed","change_lists","copiedItems","fullList","typeName","Object","entries","TaskForm","handle_taskName","e","document","getElementById","border","transition","setState","handle_rounds","target","handle_notes","handle_selectedList","listName","handle_submit","addTask","list","reset","handle_pickRandomPlaceholder","placeholders","randIndex","Math","floor","random","length","bind","Form","Group","controlId","Label","Control","onChange","as","defaultValue","disabled","hidden","maxlength","resize","rows","marks","label","TimerControls","playButtonIcon_handler","pause","handle_startStop","Slider","aria-labelledby","step","valueLabelDisplay","track","min","max","handle_changeTime","Timer","minutes","time","seconds","elapsedMinutes","elapsedSeconds","render_ongoingTask","todo","display","fontFamily","maxWidth","wordBreak","roundLogic","done","shift","set_todo","set_done","roundFinished","myInterval","setInterval","clearInterval","prevState","height","minValue","maxValue","text","strokeWidth","background","backgroundPadding","styles","buildStyles","backgroundColor","textSize","textColor","pathColor","trailColor","TimerPanel","Main","add_list","uuidv4","values","push","option","createElement","add","localStorage","setItem","JSON","stringify","i","keys","remove","innerText","task","j","todoList","getItem","parse","listOfTodo","listOfDone","marginBottom","paddingTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.9335e7f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nclass navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"transparent\" fixed=\"top\">\r\n        <Navbar.Brand>laborodor</Navbar.Brand>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default navbar;\r\n","import React, { useState } from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport \"./Task.css\";\r\nimport EdiText from \"react-editext\";\r\n\r\nclass Task extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"task\">\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <EdiText\r\n              viewProps={{\r\n                className: \"editextTaskTitle\",\r\n              }}\r\n              className=\"editextTitle\"\r\n              showButtonsOnHover={true}\r\n              editOnViewClick={true}\r\n              type=\"text\"\r\n              value={this.props.name}\r\n              onSave={(val) =>\r\n                this.props.change_taskName(this.props.taskKey, val)\r\n              }\r\n            />\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails\r\n            style={{ marginLeft: \"0\", marginRight: \"0\" }}\r\n            className=\"row\"\r\n          >\r\n            <span style={{ color: \"#a7a9be\", fontSize: \"1rem\", width: \"100%\" }}>\r\n              {this.props.finishedRounds} / {this.props.rounds} rounds\r\n            </span>\r\n            <br />\r\n            <EdiText\r\n              viewProps={{\r\n                className: \"editextTaskNotes\",\r\n              }}\r\n              className=\"editextTitle\"\r\n              showButtonsOnHover={true}\r\n              editOnViewClick={true}\r\n              type=\"text\"\r\n              value={this.props.notes}\r\n              onSave={(val) =>\r\n                this.props.change_taskNotes(this.props.taskKey, val)\r\n              }\r\n            />\r\n            <br />\r\n            <span\r\n              style={{\r\n                marginTop: \"1.5rem\",\r\n                color: \"#a7a9be\",\r\n                fontSize: \"0.9rem\",\r\n              }}\r\n              onClick={() => this.props.delete_task(this.props.taskKey)}\r\n            >\r\n              delete task\r\n            </span>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React, { useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport EdiText from \"react-editext\";\r\nimport Task from \"./Task/Task\";\r\nimport \"./List.css\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nclass List extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  isEditable = (column) => {\r\n    if (column === undefined) return;\r\n    if (column.name === \"to do\" || column.name === \"done\") {\r\n      return <h5 className=\"editextTitle\">{column.name}</h5>;\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{ paddingLeft: \"1rem\", paddingRight: \"1rem\" }}\r\n          className=\"row justify-content-between\"\r\n        >\r\n          <EdiText\r\n            viewProps={{\r\n              className: \"editextTitle\",\r\n            }}\r\n            className=\"editextTitle\"\r\n            showButtonsOnHover={true}\r\n            editOnViewClick={true}\r\n            type=\"text\"\r\n            value={column.name}\r\n            onSave={(val) => this.props.change_listName(column.id, val)}\r\n          />\r\n          <ClearIcon\r\n            id=\"deleteListButton\"\r\n            onClick={() => this.props.delete_list(column[\"id\"])}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lists !== this.props.lists) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        <div>\r\n          <Droppable\r\n            droppableId={this.props.columnId}\r\n            key={this.props.columnId}\r\n          >\r\n            {(provided, snapshot) => {\r\n              return (\r\n                <div\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  className=\"listCard\"\r\n                >\r\n                  {this.isEditable(this.props.column)}\r\n                  {this.props.column.items.map((item, index) => {\r\n                    return (\r\n                      <Draggable\r\n                        key={item.key}\r\n                        draggableId={item.key}\r\n                        index={index}\r\n                      >\r\n                        {(provided, snapshot) => {\r\n                          return (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              style={{\r\n                                userSelect: \"none\",\r\n                                ...provided.draggableProps.style,\r\n                              }}\r\n                            >\r\n                              <Task\r\n                                change_taskNotes={this.props.change_taskNotes}\r\n                                change_taskName={this.props.change_taskName}\r\n                                delete_task={this.props.delete_task}\r\n                                taskKey={item.key}\r\n                                name={item.taskName}\r\n                                finishedRounds={item.finishedRounds}\r\n                                rounds={item.rounds}\r\n                                notes={item.notes}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        }}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </div>\r\n              );\r\n            }}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport List from \"./List/List\";\r\nimport \"./ListPanel.css\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nclass ListPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  onDragEnd = (result, columns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n\r\n    if (source.droppableId !== destination.droppableId) {\r\n      console.log(\"ahahahahhaahahha\");\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n\r\n      this.props.change_lists({\r\n        ...columns,\r\n        [source.droppableId]: { ...sourceColumn, items: sourceItems },\r\n        [destination.droppableId]: { ...destColumn, items: destItems },\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      this.props.change_lists({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.lists !== this.props.lists ||\r\n      prevProps.fullList !== this.props.fullList\r\n    ) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"ListPanel\" className=\"row\">\r\n        <DragDropContext\r\n          onDragEnd={(result) => this.onDragEnd(result, this.props.fullList)}\r\n        >\r\n          <FlipMove typeName={null}>\r\n            {Object.entries(this.props.lists).map(\r\n              ([columnId, column], index) => {\r\n                return (\r\n                  <div key={column[\"id\"]}>\r\n                    <List\r\n                      change_taskNotes={this.props.change_taskNotes}\r\n                      change_taskName={this.props.change_taskName}\r\n                      delete_task={this.props.delete_task}\r\n                      delete_list={this.props.delete_list}\r\n                      lists={this.props.lists}\r\n                      columnId={columnId}\r\n                      column={column}\r\n                      change_listName={this.props.change_listName}\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            )}\r\n          </FlipMove>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListPanel;\r\n","import React from \"react\";\r\nimport \"./TaskForm.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nclass TaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskName: \"\",\r\n      rounds: 1,\r\n      notes: \"\",\r\n      placeholder: \"\",\r\n      listName: \"\",\r\n    };\r\n\r\n    this.handle_taskName = this.handle_taskName.bind(this);\r\n    this.handle_rounds = this.handle_rounds.bind(this);\r\n    this.handle_notes = this.handle_notes.bind(this);\r\n    this.handle_selectedList = this.handle_selectedList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handle_pickRandomPlaceholder();\r\n  }\r\n\r\n  handle_taskName = (e) => {\r\n    document.getElementById(\"ControlInput1\").style.border = \"1px solid #ced4da\";\r\n    document.getElementById(\"ControlInput1\").style.transition = \"0.3s ease\";\r\n    this.setState({\r\n      taskName: e,\r\n    });\r\n  };\r\n\r\n  handle_rounds = (e) => {\r\n    this.setState({\r\n      rounds: e.target.value,\r\n    });\r\n  };\r\n\r\n  handle_notes = (e) => {\r\n    this.setState({\r\n      notes: e.target.value,\r\n    });\r\n  };\r\n\r\n  handle_selectedList = (e) => {\r\n    this.setState({\r\n      listName: e.target.value,\r\n    });\r\n  };\r\n\r\n  handle_submit = () => {\r\n    if (document.getElementById(\"ControlInput1\").value !== \"\") {\r\n      this.props.addTask(\r\n        this.state.taskName,\r\n        this.state.rounds,\r\n        this.state.listName,\r\n        this.state.notes\r\n      );\r\n      this.setState({\r\n        taskName: \"\",\r\n        rounds: 1,\r\n        list: \"\",\r\n        notes: \"\",\r\n      });\r\n      document.getElementById(\"taskForm\").reset();\r\n      document.getElementById(\"ControlInput1\").value = \"\";\r\n    } else {\r\n      document.getElementById(\"ControlInput1\").style.border = \"1px solid red\";\r\n      document.getElementById(\"ControlInput1\").style.transition = \"0.3s ease\";\r\n    }\r\n  };\r\n\r\n  handle_pickRandomPlaceholder = () => {\r\n    const placeholders = [\r\n      \"studying lecture notes\",\r\n      \"do yoga\",\r\n      \"paint the walls\",\r\n      \"cook dinner\",\r\n      \"build a React.js application\",\r\n      \"4x12 bench press\",\r\n      \"study geometry\",\r\n      \"preparing CV\",\r\n    ];\r\n    var randIndex = Math.floor(Math.random() * placeholders.length);\r\n    this.setState({\r\n      placeholder: placeholders[randIndex],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"TasksForm\">\r\n        <Form id=\"taskForm\">\r\n          <Form.Group controlId=\"ControlInput1\">\r\n            <Form.Label>task name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={this.state.placeholder}\r\n              onChange={(e) => this.handle_taskName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"ControlSelect1\">\r\n            <Form.Label>estimated rounds</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => this.handle_rounds(e)}\r\n              defaultValue={\"DEFAULT\"}\r\n            >\r\n              <option value=\"DEFAULT\" disabled hidden>\r\n                select rounds\r\n              </option>\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n              <option>6</option>\r\n              <option>7</option>\r\n              <option>8</option>\r\n              <option>9</option>\r\n              <option>10</option>\r\n              <option>11</option>\r\n              <option>12</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"listField\">\r\n            <Form.Label>list</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => this.handle_selectedList(e)}\r\n              defaultValue={\"DEFAULT\"}\r\n            >\r\n              <option value=\"DEFAULT\" disabled hidden>\r\n                select list\r\n              </option>\r\n              <option>to do</option>\r\n              <option>done</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"ControlTextarea1\">\r\n            <Form.Label>task notes</Form.Label>\r\n            <Form.Control\r\n              maxlength=\"300\"\r\n              style={{ resize: \"none\" }}\r\n              as=\"textarea\"\r\n              rows=\"5\"\r\n              onChange={(e) => this.handle_notes(e)}\r\n            />\r\n          </Form.Group>\r\n          <AddIcon onClick={this.handle_submit} id=\"addButton\" />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\nimport \"./TimerControls.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: \"0\",\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"10\",\r\n  },\r\n  {\r\n    value: 10,\r\n    label: \"10\",\r\n  },\r\n  {\r\n    value: 15,\r\n    label: \"15\",\r\n  },\r\n  {\r\n    value: 20,\r\n    label: \"20\",\r\n  },\r\n  {\r\n    value: 25,\r\n    label: \"25\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"30\",\r\n  },\r\n  {\r\n    value: 35,\r\n    label: \"35\",\r\n  },\r\n  {\r\n    value: 40,\r\n    label: \"40\",\r\n  },\r\n  {\r\n    value: 45,\r\n    label: \"45\",\r\n  },\r\n  {\r\n    value: 50,\r\n    label: \"50\",\r\n  },\r\n  {\r\n    value: 55,\r\n    label: \"55\",\r\n  },\r\n  {\r\n    value: 60,\r\n    label: \"60\",\r\n  },\r\n];\r\n\r\nclass TimerControls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  playButtonIcon_handler = () => {\r\n    if (this.props.pause) {\r\n      return (\r\n        <PlayArrowIcon\r\n          id=\"playButton\"\r\n          onClick={() => this.props.handle_startStop()}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <PauseIcon\r\n          id=\"playButton\"\r\n          onClick={() => this.props.handle_startStop()}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"TimerControls\">\r\n        <div>{this.playButtonIcon_handler()}</div>\r\n        <div className=\"\">\r\n          <Slider\r\n            defaultValue={25}\r\n            aria-labelledby=\"discrete-slider\"\r\n            step={1}\r\n            marks={marks}\r\n            valueLabelDisplay=\"auto\"\r\n            track={false}\r\n            min={0}\r\n            max={60}\r\n            onChange={(e, value) => this.props.handle_changeTime(e, value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimerControls;\r\n","import React from \"react\";\r\nimport \"./Timer.css\";\r\nimport {\r\n  CircularProgressbar,\r\n  CircularProgressbarWithChildren,\r\n  buildStyles,\r\n} from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport TimerControls from \"../TimerControls/TimerControls\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minutes: 0,\r\n      seconds: 0,\r\n      elapsedMinutes: 0,\r\n      elapsedSeconds: 0,\r\n      pause: true,\r\n      time: 25,\r\n      roundFinished: true,\r\n    };\r\n\r\n    this.handle_changeTime = this.handle_changeTime.bind(this);\r\n    this.handle_startStop = this.handle_startStop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      minutes: this.state.time,\r\n    });\r\n\r\n    this.myInterval = setInterval(() => {\r\n      const seconds = this.state.seconds;\r\n      const minutes = this.state.minutes;\r\n\r\n      if (!this.state.pause) {\r\n        if (seconds > 0) {\r\n          this.setState(({ seconds, elapsedSeconds }) => ({\r\n            seconds: seconds - 1,\r\n            elapsedSeconds: elapsedSeconds + 1,\r\n          }));\r\n        }\r\n        if (seconds === 0) {\r\n          if (minutes === 0) {\r\n            if (this.state.roundFinished) {\r\n              this.roundLogic();\r\n              this.handle_changeTime(null, 5); // For testing purposes, break time is set to 1 minute\r\n              this.handle_startStop();\r\n              this.setState({\r\n                roundFinished: false,\r\n              });\r\n            } else {\r\n              if (this.props.todo.length !== 0) {\r\n                if (\r\n                  this.props.todo[0][\"finishedRounds\"] ===\r\n                  this.props.todo[0][\"rounds\"]\r\n                ) {\r\n                  this.roundLogic();\r\n                }\r\n              }\r\n              this.handle_changeTime(null, 25); // Time is set to default once the roundFinished is false\r\n              if (this.props.todo.length !== 0) {\r\n                this.handle_startStop();\r\n              }\r\n              this.setState({\r\n                roundFinished: true,\r\n              });\r\n            }\r\n          } else {\r\n            this.setState(({ minutes, elapsedMinutes }) => ({\r\n              minutes: minutes - 1,\r\n              elapsedMinutes: elapsedMinutes + 1,\r\n              seconds: 59,\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.myInterval);\r\n  }\r\n\r\n  componentDidUpdate(prevState) {}\r\n\r\n  handle_startStop = () => {\r\n    if (this.state.pause) {\r\n      this.setState({\r\n        pause: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        pause: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handle_changeTime = (e, value) => {\r\n    this.setState({\r\n      pause: true,\r\n      minutes: value,\r\n      time: value,\r\n      seconds: 0,\r\n      elapsedMinutes: 0,\r\n      elapsedSeconds: 0,\r\n    });\r\n  };\r\n\r\n  render_ongoingTask = () => {\r\n    if (this.props.todo.length !== 0) {\r\n      if (this.props.todo[0][\"notes\"] === \"\") {\r\n        var display = \"none\";\r\n      }\r\n\r\n      return (\r\n        <div className=\"ongoingTask\">\r\n          <div className=\"ongoingTaskRow row justify-content-between\">\r\n            <h5 style={{ fontSize: \"1.5rem\", fontFamily: \"ProximaNovaBold\" }}>\r\n              {this.props.todo[0][\"taskName\"]}\r\n            </h5>\r\n            <h5>\r\n              {this.props.todo[0][\"finishedRounds\"]}/\r\n              {this.props.todo[0][\"rounds\"]}\r\n            </h5>\r\n          </div>\r\n          <p\r\n            style={{\r\n              display: display,\r\n              maxWidth: \"100%\",\r\n              fontSize: \"1.2rem\",\r\n              wordBreak: \"break-word\",\r\n            }}\r\n          >\r\n            {this.props.todo[0][\"notes\"]}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  roundLogic = () => {\r\n    if (this.props.todo.length !== 0) {\r\n      if (\r\n        this.props.todo[0][\"finishedRounds\"] + 1 >\r\n        this.props.todo[0][\"rounds\"]\r\n      ) {\r\n        var finishedTask = this.props.todo.shift();\r\n        var done = [finishedTask, ...this.props.done];\r\n        this.props.set_todo(this.props.todo);\r\n        this.props.set_done(done);\r\n        this.forceUpdate()\r\n      } else {\r\n        var list = this.props.todo;\r\n        list[0][\"finishedRounds\"] += 1;\r\n        this.props.set_todo(list);\r\n        if (list[0][\"finishedRounds\"] + 1 > list[0][\"rounds\"]) {\r\n          console.log(\"Buraya girdi\")\r\n          var finishedTask = this.props.todo.shift();\r\n          var done = [finishedTask, ...this.props.done];\r\n          this.props.set_todo(this.props.todo);\r\n          this.props.set_done(done);\r\n          this.forceUpdate()\r\n        }\r\n      }\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\", width: \"100%\" }} id=\"Timer\">\r\n        <div>\r\n          <CircularProgressbar\r\n            className=\"img-fluid\"\r\n            value={this.state.elapsedSeconds}\r\n            minValue={0}\r\n            maxValue={this.state.time * 60}\r\n            text={`${this.state.minutes}:${\r\n              this.state.seconds < 10\r\n                ? `0${this.state.seconds}`\r\n                : this.state.seconds\r\n            }`}\r\n            strokeWidth={5}\r\n            background\r\n            backgroundPadding={6}\r\n            styles={buildStyles({\r\n              backgroundColor: \"#ff8906\",\r\n              textSize: \"1rem\",\r\n              textColor: \"#fffffe\",\r\n              pathColor: \"#fffffe\",\r\n              trailColor: \"transparent\",\r\n            })}\r\n          />\r\n          <TimerControls\r\n            handle_startStop={this.handle_startStop}\r\n            handle_changeTime={this.handle_changeTime}\r\n            pause={this.state.pause}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"4rem\" }}>{this.render_ongoingTask()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport \"./TimerPanel.css\";\r\nimport Timer from \"./Timer/Timer\";\r\n\r\nclass TimerPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"TimerPanel\">\r\n        <Timer\r\n          todo={this.props.todo}\r\n          done={this.props.done}\r\n          set_todo={this.props.set_todo}\r\n          set_done={this.props.set_done}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimerPanel;\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\nimport ListPanel from \"./ListPanel/ListPanel\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport TaskForm from \"./ListPanel/TaskForm/TaskForm\";\r\nimport TimerPanel from \"./TimerPanel/TimerPanel\";\r\nimport CustomScroller from \"react-custom-scroller\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lists: [],\r\n    };\r\n    var todoList = {\r\n      id: uuidv4(),\r\n      name: \"to do\",\r\n      items: [],\r\n    };\r\n    var done = {\r\n      id: uuidv4(),\r\n      name: \"done\",\r\n      items: [],\r\n    };\r\n\r\n    var lists = this.state.lists;\r\n    lists.push(todoList);\r\n    lists.push(done);\r\n    this.setState({ lists: lists });\r\n\r\n    this.delete_task = this.delete_task.bind(this);\r\n    this.delete_list = this.delete_list.bind(this);\r\n    this.addTask = this.addTask.bind(this);\r\n    this.add_list = this.add_list.bind(this);\r\n    this.change_listName = this.change_listName.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"lists\") !== null) {\r\n      this.setState({\r\n        lists: JSON.parse(localStorage.getItem(\"lists\")),\r\n      });\r\n    }\r\n  }\r\n\r\n  add_list = (val) => {\r\n    if (val === \"to do\" || val === \"done\") {\r\n      return; //Later return a notification that states that you can't add a list named to do or done.\r\n    }\r\n    var list = {\r\n      id: uuidv4(),\r\n      name: val,\r\n      items: [],\r\n    };\r\n\r\n    var lists = Object.values(this.state.lists);\r\n    lists.push(list);\r\n    this.setState({\r\n      lists: lists,\r\n    });\r\n\r\n    var option = document.createElement(\"option\");\r\n    option.text = list.name;\r\n    option.id = list[\"id\"];\r\n    document.getElementById(\"listField\").add(option);\r\n\r\n    localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n  };\r\n\r\n  delete_list = (id) => {\r\n    for (var i = 0; i < Object.keys(this.state.lists).length; i++) {\r\n      if (this.state.lists[i][\"id\"] === id) {\r\n        var lists = this.state.lists;\r\n        var list = lists.splice(i, 1);\r\n        this.setState({\r\n          lists: lists,\r\n        });\r\n\r\n        document.getElementById(\"listField\").remove(i + 1);\r\n        localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n      }\r\n    }\r\n  };\r\n\r\n  change_listName = (id, val) => {\r\n    if (val === \"to do\" || val === \"done\") return;\r\n    for (var i = 0; i < Object.keys(this.state.lists).length; i++) {\r\n      if (this.state.lists[i][\"id\"] === id) {\r\n        document.getElementById(id).innerText = val;\r\n        this.state.lists[i][\"name\"] = val;\r\n      }\r\n    }\r\n    localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n  };\r\n\r\n  change_lists = (lists) => {\r\n    this.setState({ lists: lists });\r\n    localStorage.setItem(\"lists\", JSON.stringify(lists));\r\n    console.log(this.state.lists);\r\n  };\r\n\r\n  addTask = (name, rounds, listName, notes) => {\r\n    var task = {\r\n      key: uuidv4(),\r\n      taskName: name,\r\n      rounds: rounds,\r\n      finishedRounds: 0,\r\n      notes: notes,\r\n    };\r\n\r\n    var index = -1;\r\n\r\n    for (var i = 0; i < Object.keys(this.state.lists).length; i++) {\r\n      console.log(this.state.lists[i][\"name\"]);\r\n      if (this.state.lists[i][\"name\"] === listName) {\r\n        var list = this.state.lists[i];\r\n        list[\"items\"].push(task);\r\n        var lists = this.state.lists;\r\n        lists[i] = list;\r\n\r\n        this.setState({\r\n          lists: lists,\r\n        });\r\n      }\r\n    }\r\n    localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  set_todo = (list) => {\r\n    var lists = this.state.lists;\r\n    var todo = this.state.lists[0];\r\n    todo[\"items\"] = list;\r\n    lists[0] = todo;\r\n    this.setState({\r\n      lists: lists,\r\n    });\r\n    localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  set_done = (list) => {\r\n    var lists = this.state.lists;\r\n    var done = this.state.lists[1];\r\n    done[\"items\"] = list;\r\n    lists[1] = done;\r\n    this.setState({\r\n      lists: lists,\r\n    });\r\n    localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  delete_task = (taskKey) => {\r\n    for (var i = 0; i < Object.keys(this.state.lists).length; i++) {\r\n      for (var j = 0; j < this.state.lists[i][\"items\"].length; j++) {\r\n        if (this.state.lists[i][\"items\"][j][\"key\"] === taskKey) {\r\n          var task = taskKey;\r\n          var lists = this.state.lists;\r\n          var items = this.state.lists[i][\"items\"];\r\n          items.splice(j, 1);\r\n          lists[i][\"items\"] = items;\r\n          this.setState({\r\n            lists: lists,\r\n          });\r\n          this.forceUpdate();\r\n          localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  change_taskName = (taskKey, val) => {\r\n    for (var i = 0; i < Object.keys(this.state.lists).length; i++) {\r\n      for (var j = 0; j < this.state.lists[i][\"items\"].length; j++) {\r\n        if (this.state.lists[i][\"items\"][j][\"key\"] === taskKey) {\r\n          var task = taskKey;\r\n          var lists = this.state.lists;\r\n          var items = lists[i][\"items\"];\r\n          lists[i][\"items\"][j][\"taskName\"] = val;\r\n          this.setState({\r\n            lists: lists,\r\n          });\r\n          localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n          this.forceUpdate();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  change_taskNotes = (taskKey, val) => {\r\n    for (var i = 0; i < Object.keys(this.state.lists).length; i++) {\r\n      for (var j = 0; j < this.state.lists[i][\"items\"].length; j++) {\r\n        if (this.state.lists[i][\"items\"][j][\"key\"] === taskKey) {\r\n          var task = taskKey;\r\n          var lists = this.state.lists;\r\n          var items = lists[i][\"items\"];\r\n          lists[i][\"items\"][j][\"notes\"] = val;\r\n          this.setState({\r\n            lists: lists,\r\n          });\r\n          localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n          this.forceUpdate();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var todo = [this.state.lists[0]];\r\n    var done = [this.state.lists[1]];\r\n\r\n    if (this.state.lists[0] !== undefined) {\r\n      var listOfTodo = this.state.lists[0][\"items\"];\r\n      var listOfDone = this.state.lists[1][\"items\"];\r\n    }\r\n\r\n    return (\r\n      <div id=\"Main\">\r\n        <Navbar />\r\n        <div id=\"Panels\">\r\n          <div id=\"mainPanel\" className=\"fullPage row\">\r\n            <div\r\n              style={{ backgroundColor: \"#FAFBFD\" }}\r\n              className=\"columns col-lg-3 col-md-12\"\r\n            >\r\n              <h4\r\n                style={{\r\n                  marginLeft: \"2rem\",\r\n                  marginTop: \"6rem\",\r\n                  marginBottom: \"2rem\",\r\n                  fontSize: \"1.5rem\",\r\n                  fontFamily: \"ProximaNovaBold\",\r\n                  color: \"#0f0e17\",\r\n                }}\r\n              >\r\n                add task\r\n              </h4>\r\n              <TaskForm addTask={this.addTask} />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingTop: \"3rem\",\r\n                width: \"100%\",\r\n                paddingRight: \"3rem\",\r\n                paddingLeft: \"3rem\",\r\n              }}\r\n              className=\"columns col-lg-6 col-md-12\"\r\n            >\r\n              <CustomScroller>\r\n                <ListPanel\r\n                  change_taskNotes={this.change_taskNotes}\r\n                  change_taskName={this.change_taskName}\r\n                  delete_task={this.delete_task}\r\n                  delete_list={this.delete_list}\r\n                  fullList={this.state.lists}\r\n                  lists={this.state.lists}\r\n                  change_listName={this.change_listName}\r\n                  change_lists={this.change_lists}\r\n                />\r\n              </CustomScroller>\r\n              <AddIcon\r\n                onClick={() =>\r\n                  this.add_list(\r\n                    \"list \" + (Object.keys(this.state.lists).length + 1)\r\n                  )\r\n                }\r\n                id=\"addButton2\"\r\n              />\r\n            </div>\r\n            <div\r\n              style={{ paddingTop: \"2rem\" }}\r\n              className=\"columns col-lg-3 col-md-12\"\r\n            >\r\n              <TimerPanel\r\n                todo={listOfTodo}\r\n                done={listOfDone}\r\n                set_todo={this.set_todo}\r\n                set_done={this.set_done}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/ProximaNova-Regular.otf';\nimport './fonts/Proxima\\ Nova\\ Alt\\ Bold.otf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ProximaNova-Regular.410504d4.otf\";","module.exports = __webpack_public_path__ + \"static/media/Proxima Nova Alt Bold.9d62cb9f.otf\";"],"sourceRoot":""}